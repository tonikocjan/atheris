digraph abstrSynTree {
	0[label="AstStatements "]
	1[label="AbsWhileExpr "]
	2[label="AstBinaryExpression  LTH"]
	3[label="AbsVarName  i"]
	4[label="AbsAtomConst  INTEGER(10)"]
	5[label="AstStatements "]
	6[label="AstFunctionCallExpression  print"]
	7[label="AstLabeledExpr 12"]
	8[label="Label:  _"]
	9[label="AbsVarName  i"]
	10[label="AstBinaryExpression  ASSIGN"]
	11[label="AbsVarName  i"]
	12[label="AstBinaryExpression  ADD"]
	13[label="AbsVarName  i"]
	14[label="AbsAtomConst  INTEGER(1)"]
	0 -> { 1};
	1 -> { 2 5};
	2 -> { 3 4};
	3 -> {};
	4 -> {};
	5 -> { 6 10};
	6 -> { 7};
	7 -> { 8 9};
	8 -> {};
	9 -> {};
	10 -> { 11 12};
	11 -> {};
	12 -> { 13 14};
	13 -> {};
	14 -> {};
}
